{"version":3,"sources":["Components/movie-cast/MovieCastStyled.js","Components/movie-cast/MovieCastPage.js"],"names":["MovieCastContainer","styled","div","MovieCastPage","movieId","useState","cast","setCast","setError","useEffect","apiService","fetchMovieCredits","then","data","catch","className","map","star","profile_path","src","alt","name","character","id"],"mappings":"yIAsBeA,E,MApBYC,EAAOC,IAAV,oY,OCwCTC,UArCO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,MAAnC,mBAAcG,GAAd,WAUA,OAPAC,qBAAU,WACNC,IACCC,kBAAkBP,GAClBQ,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKP,SAC1BQ,MAAMN,KACR,CAACJ,IAGA,cAAC,EAAD,UACKE,GACG,oBAAIS,UAAU,YAAd,SACKT,EAAKU,KAAI,SAACC,GAAD,OACN,oBAAIF,UAAU,iBAAd,SACKE,EAAKC,cACF,qCACI,qBAAKC,IAAG,UAjBxB,mCAiBwB,OAAeF,EAAKC,cAAgBE,IAAKH,EAAKI,OACtD,mBAAGN,UAAU,sBAAb,SAAoCE,EAAKI,OACzC,oBAAGN,UAAU,sBAAb,wBAA+CE,EAAKK,iBAL5BL,EAAKM","file":"static/js/cast-page.6be8fd78.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst MovieCastContainer = styled.div`\n    .cast-list {\n        display: flex;\n        flex-wrap: wrap;\n\n        &_item {\n            img {\n                width: 150px;\n            }\n\n            &_text {\n                font-family: 'Nunito', sans-serif;\n                font-size: 16px;\n                width: 150px;\n                color: #c2c0c0;\n            }\n        }\n    }\n`;\n\nexport default MovieCastContainer;","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport apiService from '../../services/movies-api';\nimport MovieCastContainer from './MovieCastStyled';\n\nconst MovieCastPage = ({movieId}) => {\n    const [cast, setCast] = useState(null);\n    const [error, setError] = useState(null);\n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n    useEffect(() => {\n        apiService\n        .fetchMovieCredits(movieId)\n        .then(data => setCast(data.cast))\n        .catch(setError);\n    }, [movieId]);\n\n    return (\n        <MovieCastContainer>\n            {cast && \n                <ul className='cast-list'>\n                    {cast.map((star) => \n                        <li className='cast-list_item' key={star.id}>\n                            {star.profile_path && \n                                <>\n                                    <img src={`${IMG_URL}${star.profile_path}`} alt={star.name} />\n                                    <p className='cast-list_item_text'>{star.name}</p>\n                                    <p className='cast-list_item_text'>Character: {star.character}</p>\n                                </>\n                            }\n                        </li>\n                    )}\n                </ul>\n            }\n        </MovieCastContainer>\n    );\n};\n\nMovieCastPage.propTypes = {\n    movieId: PropTypes.string,\n};\n\nexport default MovieCastPage;"],"sourceRoot":""}