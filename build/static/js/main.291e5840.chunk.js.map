{"version":3,"sources":["services/movies-api.js","Components/pages/HomePage.js","Components/searchbar/Searchbar.js","Components/pages/MoviesPage.js","routes/mainRoutes.js","Components/header/headerList/HeaderList.js","Components/header/Header.js","Components/App.js","index.js"],"names":["BASE_URL","API_KEY","api","fetchTrendingMovies","fetch","then","result","ok","json","Promise","reject","Error","fetchSearchMovie","movie","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","HomePage","useState","trendingMovies","setTrendingMovies","setError","useEffect","apiService","data","results","catch","map","to","id","title","Searchbar","onSubmit","searchbar","setSearchbar","className","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","MoviesPage","setMovie","movies","setMovies","movieTag","mainRoutes","path","component","exact","HeaderList","item","activeClassName","Header","lazy","MovieDetailsPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.291e5840.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=5197685d1d7e008be78723b4c9a471af';\n\nfunction fetchTrendingMovies() {\n    return fetch(`${BASE_URL}/trending/movie/day${API_KEY}`)\n    .then(result => {\n            if(result.ok) {\n                return result.json()\n            };\n            return Promise.reject(new Error('Not Found'));\n        })\n};\n\nfunction fetchSearchMovie(movie) {\n    return fetch(`${BASE_URL}/search/movie${API_KEY}&language=en-US&query=${movie}&page=1&include_adult=false`)\n    .then(result => {\n            if(result.ok) {\n                return result.json()\n            };\n            return Promise.reject(new Error('Not Found'));\n        })\n};\n\nfunction fetchMovieDetails(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}${API_KEY}&language=en-US`)\n    .then(result => {\n            if(result.ok) {\n                return result.json()\n            };\n            return Promise.reject(new Error('Not Found'));\n        })\n};\n\nfunction fetchMovieCredits(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`)\n    .then(result => {\n            if(result.ok) {\n                return result.json()\n            };\n            return Promise.reject(new Error('Not Found'));\n        })\n};\n\nfunction fetchMovieReviews(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`)\n    .then(result => {\n            if(result.ok) {\n                return result.json()\n            };\n            return Promise.reject(new Error('Not Found'));\n        })\n};\n\nconst api = {\n    fetchTrendingMovies,\n    fetchSearchMovie,\n    fetchMovieDetails,\n    fetchMovieCredits,\n    fetchMovieReviews\n};\n\nexport default api;","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport apiService from '../../services/movies-api';\n\nconst HomePage = () => {\n    const [trendingMovies, setTrendingMovies] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        apiService\n        .fetchTrendingMovies()\n        .then(data => setTrendingMovies(data.results))\n        .catch(setError);\n    }, [])\n\n    return (\n        <>\n            <h1>Trending today</h1>\n            <ul>\n                {trendingMovies && trendingMovies.map((movie)=> \n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    );\n};\n\nexport default HomePage;","import React, {useState} from 'react';\nimport { toast } from 'react-toastify';\n\nconst Searchbar = ({onSubmit}) => {\n    const [searchbar, setSearchbar] = useState('');\n\n    const handleNameChange = (e) => {\n        setSearchbar(e.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(searchbar.trim() === '') {\n            toast.error('Enter a movie title, please.');\n            return;\n        };\n        onSubmit(searchbar);\n        setSearchbar('');\n    };\n\n    return (\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n            <input\n                className = \"SearchForm-input\"\n                type = \"text\"\n                autoComplete = \"off\"\n                autoFocus\n                placeholder = \"Search movies\"\n                name = \"movieTag\"\n                value = {searchbar}\n                onChange={handleNameChange}\n            />\n            <button type=\"submit\" className=\"SearchForm-button\">\n                <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n        </form>\n    );\n};\n\nexport default Searchbar;","import React, {useState, useEffect} from 'react';\nimport Searchbar from '../searchbar/Searchbar';\nimport apiService from '../../services/movies-api';\nimport { Link } from 'react-router-dom';\n\nconst MoviesPage = () => {\n    const [movie, setMovie] = useState('');\n    const [movies, setMovies] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (movie) {\n            apiService\n                .fetchSearchMovie(movie)\n                .then(data=> setMovies(data.results))\n                .catch(setError)\n        }\n    }, [movie])\n    \n    const handleFormSubmit = (movieTag) => {\n        setMovie(movieTag);\n    };\n\n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit}/>\n            <ul>\n                {movies && movies.map((movie) => \n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                    </li>\n                )}\n            </ul>\n       </>\n    );\n};\n\nexport default MoviesPage;","import HomePage from '../Components/pages/HomePage';\nimport MoviesPage from '../Components/pages/MoviesPage';\n\nexport const mainRoutes = [\n    {\n        name: 'Home',\n        path: '/',\n        component: HomePage,\n        exact: true\n    },\n    {\n        name: 'Movies',\n        path: '/movies',\n        component: MoviesPage,\n        exact: false\n    },\n];","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { mainRoutes } from '../../../routes/mainRoutes';\n\nconst HeaderList = () => {\n    return (\n        <nav>\n            <ul className='header-list'>\n                {mainRoutes.map((item)=> (\n                    <li className='header-list_item' key={item.path}>\n                        <NavLink \n                            to={item.path}\n                            exact={item.exact}\n                            className='header-list_link'\n                            activeClassName='header-list_link-active' \n                        >\n                            {item.name}\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nexport default HeaderList;","import React from 'react';\nimport HeaderList from './headerList/HeaderList';\n\nconst Header = () => {\n    return (\n        <header>\n            <HeaderList/>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router';\nimport Header from './header/Header';\n// import HomePage from './pages/HomePage';\n// import MovieDetailsPage from './pages/MovieDetailsPage';\n// import MoviesPage from './pages/MoviesPage';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst MovieDetailsPage = lazy(() => import('./pages/MovieDetailsPage'));\nconst MoviesPage = lazy(() => import('./pages/MoviesPage'));\n\n\nconst App = () => {\n    return (\n        <>\n            <Header/>\n            <ToastContainer/>\n            <Suspense>\n                <Switch>\n                    <Route path=\"/\" exact> \n                        <HomePage/>\n                    </Route>\n\n                    <Route path=\"/movies\" exact>\n                        <MoviesPage/>\n                    </Route>\n\n                    <Route path=\"/movies/:movieId\">\n                        <MovieDetailsPage/>\n                    </Route>\n\n                    <Route>\n                        <HomePage/>\n                    </Route>\n                </Switch>\n            </Suspense>\n        </>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from '../src/Components/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}